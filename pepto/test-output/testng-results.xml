<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="30" started-at="2015-07-27T20:16:17Z" finished-at="2015-07-27T20:16:17Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="30" started-at="2015-07-27T20:16:17Z" finished-at="2015-07-27T20:16:17Z">
      <class name="mobile.test.iPhoneTestRun">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:mobile.test.iPhoneTestRun@635aed57]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-27T16:16:17Z" finished-at="2015-07-27T16:16:17Z">
          <exception class="java.lang.UnsupportedClassVersionError">
            <message>
              <![CDATA[io/appium/java_client/ios/IOSDriver : Unsupported major.minor version 51.0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedClassVersionError: io/appium/java_client/ios/IOSDriver : Unsupported major.minor version 51.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:637)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:621)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at mobile.test.iPhoneTestRun.setUp(iPhoneTestRun.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedClassVersionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:mobile.test.iPhoneTestRun@635aed57]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-27T16:16:17Z" finished-at="2015-07-27T16:16:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="measurePerformance()[pri:0, instance:mobile.test.iPhoneTestRun@635aed57]" name="measurePerformance" duration-ms="8" started-at="2015-07-27T16:16:17Z" finished-at="2015-07-27T16:16:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- measurePerformance -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:mobile.test.iPhoneTestRun@635aed57]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-07-27T16:16:17Z" finished-at="2015-07-27T16:16:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:mobile.test.iPhoneTestRun@635aed57]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-07-27T16:16:17Z" finished-at="2015-07-27T16:16:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobile.test.iPhoneTestRun -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
